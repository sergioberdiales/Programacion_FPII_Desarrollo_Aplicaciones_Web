knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(echo = FALSE)
x = 1
x + 1
pi
calculos_radio <- function(r) {
l = 2*pi*r
a = pi*r**2
v = (4/3)*pi*r**3
}
calculos_radio(2)
calculos_radio <- function(r) {
l = 2*pi*r
a = pi*r**2
v = (4/3)*pi*r**3
print(c(l, a, v))
}
calculos_radio(2)
2**2
calculos_radio(3)
calculos_radio <- function(r) {
l = 2*pi*r
a = pi*r**2
v = (4/3)*pi*r**3
print(l, a, v)
}
calculos_radio(3)
calculos_radio <- function(r) {
l = 2*pi*r
a = pi*r**2
v = (4/3)*pi*r**3
print(c(l, a, v))
}
calculos_radio(3)
numero_signo <- function(num) {
if (num >= 0) {
print("El número introducido es positivo.")
} else {
print("El número introducido es negativo.")
}
}
numero_signo(3)
numero_signo <- function(num) {
if (num >= 0) {
print("El número introducido es positivo.")
} else {
print("El número introducido es negativo.")
}
}
numero_signo(-3)
numero_signo <- function(num) {
if (num > 0) {
print("El número introducido es positivo.")
} else if (num < 0) {
print("El número introducido es negativo.")
} else if (num = 0) {
numero_signo <- function(num) {
if (num > 0) {
print("El número introducido es positivo.")
} else if (num < 0) {
print("El número introducido es negativo.")
} else if (num == 0) {
print("El número introducido es nulo.")
}
}
numero_signo(-3)
numero_signo <- function(num) {
if (num > 0) {
print("El número introducido es positivo.")
} else if (num < 0) {
print("El número introducido es negativo.")
} else if (num == 0) {
print("El número introducido es nulo.")
}
}
numero_signo(0)
numero_signo <- function(num) {
if (num > 0) {
print("El número introducido es positivo.")
} else if (num < 0) {
print("El número introducido es negativo.")
} else if (num == 0) {
print("El número introducido es nulo.")
}
}
numero_signo(r)
numero_signo <- function(num) {
if (num > 0) {
print("El número introducido es positivo.")
} else if (num < 0) {
print("El número introducido es negativo.")
} else if (num == 0) {
print("El número introducido es nulo.")
}
}
numero_signo(-1)
numero_signo <- function(num) {
if (num > 0) {
print("El número introducido es positivo.")
} else if (num < 0) {
print("El número introducido es negativo.")
} else if (num == 0) {
print("El número introducido es nulo.")
} else {
print("El elemento introducido no es un número.")
}
}
numero_signo(-1)
numero_signo <- function(num) {
if (num > 0) {
print("El número introducido es positivo.")
} else if (num < 0) {
print("El número introducido es negativo.")
} else if (num == 0) {
print("El número introducido es nulo.")
} else {
print("El elemento introducido no es un número.")
}
}
numero_signo(1/2)
numero_signo <- function(num) {
if (num > 0) {
print("El número introducido es positivo.")
} else if (num < 0) {
print("El número introducido es negativo.")
} else if (num == 0) {
print("El número introducido es nulo.")
} else {
print("El elemento introducido no es un número.")
}
}
numero_signo(g)
numero_signo <- function(num) {
if (num > 0) {
print("El número introducido es positivo.")
} else if (num < 0) {
print("El número introducido es negativo.")
} else if (num == 0) {
print("El número introducido es nulo.")
} else {
print("El elemento introducido no es un número.")
}
}
numero_signo(inf)
numero_signo <- function(num) {
if (num > 0) {
print("El número introducido es positivo.")
} else if (num < 0) {
print("El número introducido es negativo.")
} else if (num == 0) {
print("El número introducido es nulo.")
}
}
numero_signo(-2)
numero_signo <- function(num) {
if (num > 0) {
print("El número introducido es positivo.")
} else if (num < 0) {
print("El número introducido es negativo.")
} else {
print("El número introducido es nulo.")
}
}
numero_signo(-2)
knitr::opts_chunk$set(echo = TRUE, knitr.table.format = "html")
# Carga de librerías
library(tidyverse)
library(lubridate)
library(readxl)
library(GGally)
library(gridExtra)
library(knitr)
library(reticulate)
library(scales)
library(kableExtra)
library(janitor)
# Librerías para el modelado
library(caret)
library(rpart.plot)
library(ranger)
data <- read_rds("../2019-07_08_1_Generacion_tablas_datos_feb_jun/datasets/train_test_datasets/model_data_4.rds")
#data <- data %>% select(-last_minute_calls_0,                    -last_minute_calls_1,-last_minute_calls_2,-last_minute_calls_3)
glimpse(data)
n_trees_accuracy <- data.frame(n_trees = c(10, 50, 100, 200, 500, 1000, 2000, 5000),
accuracy = c(0.4423, 0.4877, 0.4995, 0.4976, 0.503, 0.5041, 0.5057, 0.5042))
ggplot(data = n_trees_accuracy, aes(x = n_trees, y = accuracy, group = 1)) +
geom_line() +
geom_point() +
ylab("Accuracy") +
xlab("Número de árboles") +
ylim(0.4, 0.55)  +
scale_x_continuous(breaks=c(10, 200, 500, 1000, 2000, 5000)) +
labs(title = "Modelo Random Forest: Accuracy vs Número de árboles")
n_trees_accuracy
#variables_87 <- names(model_data_4)
#saveRDS(variables_87, "rds_files/variables_87.rds")
variables_87 <- read_rds("rds_files/variables_87.rds")
